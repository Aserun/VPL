<Window x:Class="CaptiveAire.VPL.View.FunctionEditorDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:Cas.Common.WPF.Converters;assembly=Cas.Common.WPF"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:behaviors="clr-namespace:Cas.Common.WPF.Behaviors;assembly=Cas.Common.WPF"
        xmlns:viewModel="clr-namespace:CaptiveAire.VPL.ViewModel"
        xmlns:view="clr-namespace:CaptiveAire.VPL.View"
        xmlns:controls="clr-namespace:Cas.Common.WPF.Controls;assembly=Cas.Common.WPF"
        xmlns:wpf="clr-namespace:Cas.Common.WPF;assembly=Cas.Common.WPF"
        xmlns:converters1="clr-namespace:CaptiveAire.VPL.Converters"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Background="LightGray"
        x:ClassModifier="internal"
        x:Name="Root"
        d:DataContext="{x:Static viewModel:ViewModelLocator.FunctionEditorDialog}"
        Title="{Binding Path=Title}" Height="800" Width="1200" Icon="/CaptiveAire.VPL;component/Images/WindowIcon.png">
    
    <Window.InputBindings>
        <KeyBinding Key="F5" Command="{Binding Path=RunCommand}"/>
        <KeyBinding Key="Pause" Command="{Binding Path=StopCommand}"/>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding Path=SaveCommand}"/>
    </Window.InputBindings>
    
    <Window.Resources>
        <ResourceDictionary x:Name="MainResourceDictionary">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ElementResources.xaml"/>
                <ResourceDictionary>
                    <Style TargetType="TextBlock" x:Key="HeaderTextBlock">
                        <Setter Property="Margin" Value="4"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                    </Style>
                    <converters1:PercentageConverter x:Key="PercentageConverter"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    
    <i:Interaction.Behaviors>
        <behaviors:CloseableBehavior/>
    </i:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal">
            <StackPanel.Resources>
                <Style TargetType="controls:AutoGreyableImage">
                    <Setter Property="Margin" Value="2"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Margin" Value="2"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="2"/>
                    <Setter Property="MinWidth" Value="80"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </StackPanel.Resources>

            <Button Command="{Binding Path=CheckForErrorsCommand}" ToolTip="Check the function for errors.">
                <StackPanel Orientation="Horizontal">
                    <controls:AutoGreyableImage Width="16" Source="/CaptiveAire.VPL;component/Images/CheckForErrors_16x.png" />
                    <TextBlock>Check</TextBlock>
                </StackPanel>
            </Button>
            <Button Command="{Binding Path=RunCommand}" ToolTip="Run this function.">
                <StackPanel Orientation="Horizontal">
                    <controls:AutoGreyableImage Width="16" Source="/CaptiveAire.VPL;component/Images/arrow_run_16xLG.png" />    
                    <TextBlock>Run - F5</TextBlock>
                </StackPanel>
            </Button>
            <Button Command="{Binding Path=StopCommand}" ToolTip="Cancel execution.">
                <StackPanel Orientation="Horizontal">
                    <controls:AutoGreyableImage Width="16" Source="/CaptiveAire.VPL;component/Images/Stop_16x.png" />
                    <TextBlock>Stop</TextBlock>
                </StackPanel>
            </Button>
        </StackPanel>

        <TabControl Grid.Row="1">
            <TabItem Header="Code" >
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200" />
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="4"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            
                            <Rectangle Fill="CornflowerBlue"/>
                            <TextBlock Grid.Row="0" Style="{StaticResource HeaderTextBlock}" Text="Elements" />
                            <view:ToolsView Grid.Row="1" DataContext="{Binding Path=Tools}"   />
                        </Grid>

                        
                        
                        <Rectangle Grid.Row="1" VerticalAlignment="Top" Height="1" HorizontalAlignment="Stretch" Fill="DarkGray"/>
                        <GridSplitter Grid.Row="1" Background="LightGray" ResizeBehavior="PreviousAndNext" ResizeDirection="Rows" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                        <Rectangle Grid.Row="1" VerticalAlignment="Bottom" Height="1" HorizontalAlignment="Stretch" Fill="DarkGray"/>

                        <Grid Grid.Row="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            
                            <Rectangle Fill="CornflowerBlue"/>
                            <TextBlock Grid.Row="0" Text="Variables" Style="{StaticResource HeaderTextBlock}"/>
                            
                            <ToolBar Grid.Row="1">
                                <ComboBox ItemsSource="{Binding Path=Function.Context.Types}" DisplayMemberPath="Name" MinWidth="130" SelectedItem="{Binding Path=SelectedType}" />
                                <Button Command="{Binding Path=AddVariableCommand}">Add</Button>
                            </ToolBar>
                            
                            <ListBox Grid.Row="2" ItemsSource="{Binding Path=Function.Variables}" >
                                
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                       <view:VariableView/>
                                     </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="ContextMenu">
                                            <Setter.Value>
                                                <ContextMenu>
                                                    <MenuItem Header="Rename" Command="{Binding Path=RenameCommand}"/>
                                                    <MenuItem Header="Delete" Command="{Binding Path=DeleteCommand}"/>
                                                </ContextMenu>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </Grid>
                    </Grid>
                    
                    
                    <GridSplitter Grid.Column="1" ResizeBehavior="PreviousAndNext" Background="LightGray" HorizontalAlignment="Stretch"/>

                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="4"/>
                            <RowDefinition Height="200"/>
                        </Grid.RowDefinitions>

                        <Grid PreviewMouseWheel="ScaleOnPreviewMouseWheel">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Visible" Background="White" Padding="4">
                                <Grid Background="Transparent" IsHitTestVisible="True" x:Name="DesignRoot" AllowDrop="True" Drop="DesignRoot_OnDrop" DragOver="DesignRoot_OnDragOver" DragEnter="DesignRoot_OnDragEnter" DragLeave="DesignRoot_OnDragLeave" >
                                    <Grid.LayoutTransform>
                                        <ScaleTransform ScaleX="{Binding Path=Scale}" ScaleY="{Binding Path=Scale}"/>
                                    </Grid.LayoutTransform>

                                    <Grid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Paste" Command="{Binding Path=PasteCommand}"/>
                                        </ContextMenu>
                                    </Grid.ContextMenu>

                                    <view:ElementsView DataContext="{Binding Path=Function.Elements}">
                                        <!--<ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas IsItemsHost="True" Width="{Binding Function.Width}" Height="{Binding Function.Height}" Background="White"  />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>-->

                                    </view:ElementsView>
                                </Grid>
                            </ScrollViewer>

                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="200" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Slider Grid.Column="1" Margin="2" MinWidth="200" ToolTip="Zoom" Value="{Binding Path=Scale}" Minimum="{Binding Path=ScaleMin}" Maximum="{Binding Path=ScaleMax}" x:Name="ZoomSlider" IsMoveToPointEnabled="False" >


                                </Slider>

                                <TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="2" ToolTip="Double Click to reset zoom.">
                                    <TextBlock.InputBindings>
                                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding Path=ResetZoomCommand}"/>
                                    </TextBlock.InputBindings>
                                    <TextBlock Text="{Binding Path=Scale, StringFormat=0, Converter={StaticResource PercentageConverter}}"/>    
                                    <TextBlock Text="%"/>                   
                                </TextBlock>
                            </Grid>

                        
                        </Grid>

                        <GridSplitter Background="DarkGray" Grid.Row="1" ResizeBehavior="PreviousAndNext" ResizeDirection="Rows" HorizontalAlignment="Stretch"/>
                        
                        <Grid Grid.Row="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                        </Grid>
                        
                        <Grid Grid.Row="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>    
                            
                            <Rectangle Grid.Row="0" Fill="CornflowerBlue"/>
                            <TextBlock Grid.Row="0" Style="{StaticResource HeaderTextBlock}">Errors</TextBlock>
                            
                            <DataGrid Grid.Row="1" ItemsSource="{Binding Path=Errors}" AutoGenerateColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Level" Binding="{Binding Path=Level}" MinWidth="100" />
                                    <DataGridTextColumn Header="Message" Binding="{Binding Path=Message}" MinWidth="800"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            
                        </Grid>
                        

                    </Grid>

                        
                </Grid>
            </TabItem>
            <TabItem Header="Signature">
                
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <GroupBox Header="Signature">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock VerticalAlignment="Center" Margin="2" Text="Name"/>
                            <TextBox Grid.Row="0" Grid.Column="1" Margin="2" VerticalAlignment="Center" Text="{Binding Path=Function.Name}"/>
                            
                            <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="2" Text="Return Type"/>
                            <ComboBox Grid.Row="1" Grid.Column="1" IsEnabled="False" Margin="2" VerticalAlignment="Center" ItemsSource="{Binding Path=Function.Context.Types}" DisplayMemberPath="Name" SelectedValuePath="Id" SelectedValue="{Binding Path=Function.ReturnTypeId}" BorderThickness="0"/>
                            <Button Grid.Row="1" Grid.Column="2" Margin="4" MinWidth="100" Command="{Binding Path=SelectReturnTypeCommand}"  VerticalAlignment="Center">Select Type</Button>
                            <Button Grid.Row="1" Grid.Column="3" Margin="4" MinWidth="100" Command="{Binding Path=ClearReturnTypeCommand}" VerticalAlignment="Center">Clear Type</Button>
                        </Grid>
                    </GroupBox>

                    <GroupBox Grid.Row="1" Header="Dimensions">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="4" VerticalAlignment="Center">Width</TextBlock>
                            <xctk:IntegerUpDown MinWidth="200" Margin="4" VerticalAlignment="Center" Value="{Binding Path=Function.Width}"/>

                            <TextBlock Margin="4" VerticalAlignment="Center">Height</TextBlock>
                            <xctk:IntegerUpDown MinWidth="200" Margin="4" VerticalAlignment="Center" Value="{Binding Path=Function.Height}"/>
                        </StackPanel>
                    </GroupBox>
                    
                    <GroupBox Grid.Row="2" Header="Arguments">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <ToolBar Grid.Row="0" DataContext="{Binding Path=Function.Arguments}">
                                <Button ToolTip="Insert a new item above the currently selected item" Command="{Binding Path=InsertAboveCommand}">
                                    <controls:AutoGreyableImage Source="/CaptiveAire.VPL;component/Images/InsertAbove.png" Width="16"  />
                                </Button>

                                <Button ToolTip="Insert a new item below the currenlt selected item" Command="{Binding Path=InsertBelowCommand}">
                                    <controls:AutoGreyableImage Source="/CaptiveAire.VPL;component/Images/InsertBelow.png" Width="16"  />
                                </Button>

                                <Separator/>

                                <Button ToolTip="Move the selected item(s) down" Command="{Binding Path=MoveDownCommand}">
                                    <controls:AutoGreyableImage Source="/CaptiveAire.VPL;component/Images/MoveDown.png" Width="16"  />
                                </Button>
                                <Button ToolTip="Move the selected item(s) up" Command="{Binding Path=MoveUpCommand}">
                                    <controls:AutoGreyableImage Source="/CaptiveAire.VPL;component/Images/MoveUp.png" Width="16"  />
                                </Button>


                                <Button ToolTip="Move the selected item(s) to the bottom" Command="{Binding Path=MoveToBottomCommand}">
                                    <controls:AutoGreyableImage Source="/CaptiveAire.VPL;component/Images/move_to_bottom.png" Width="16"  />
                                </Button>
                                <Button ToolTip="Move the selected item(s) to the top" Command="{Binding Path=MoveToTopCommand}">
                                    <controls:AutoGreyableImage Source="/CaptiveAire.VPL;component/Images/move_to_top.png" Width="16"  />
                                </Button>

                                <Separator/>
                                <Button ToolTip="Delete" Command="{Binding Path=DeleteCommand}">
                                    <controls:AutoGreyableImage Source="/CaptiveAire.VPL;component/Images/Delete.gif" Width="16"  />
                                </Button>
                            </ToolBar>

                            <DataGrid Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding Path=Function.Arguments}" IsReadOnly="True">
                                
                                <DataGrid.Resources>
                                    <Style TargetType="ComboBox" x:Key="DataTypeColumnStyle">
                                        <Setter Property="ItemsSource" Value="{Binding ElementName=Root, Path=DataContext.Function.Context.Types}"/>
                                        <Setter Property="SelectedValuePath" Value="Id"/>
                                        <Setter Property="DisplayMemberPath" Value="Name"/>
                                        <Setter Property="SelectedValue" Value="{Binding Path=TypeId}"></Setter>
                                    </Style>
                                </DataGrid.Resources>
                                
                                <i:Interaction.Behaviors>
                                    <behaviors:MultiSelectorSelectedItemsBehavior SelectedItems="{Binding Path=Function.Arguments.SelectedItems}"/>
                                </i:Interaction.Behaviors>
                                
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" MinWidth="200"/>
                                    <DataGridComboBoxColumn Header="Data Type" MinWidth="300" ElementStyle="{StaticResource DataTypeColumnStyle}" EditingElementStyle="{StaticResource DataTypeColumnStyle}" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </GroupBox>
                </Grid>
                               
            </TabItem>
        </TabControl>

        

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <TextBlock VerticalAlignment="Center" Margin="4">
                <TextBlock Text="Root Elements: "/>
                <TextBlock Text="{Binding Path=Function.Elements.Count}"></TextBlock>
            </TextBlock>
            
            <StackPanel Grid.Column="2" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="4"/>
                        <Setter Property="MinWidth" Value="80"></Setter>
                    </Style>
                    <Style TargetType="controls:AutoGreyableImage">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="2"></Setter>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="2"></Setter>
                    </Style>
                </StackPanel.Resources>

                <Button Command="{Binding Path=SaveCommand}" ToolTip="Save the function (Ctrl + S)">
                    <StackPanel Orientation="Horizontal">
                        <controls:AutoGreyableImage Source="/CaptiveAire.VPL;component/Images/save_16xLG.png" />
                        <TextBlock>Save</TextBlock>
                    </StackPanel>
                </Button>
                
                <Button Command="{Binding Path=CloseCommand}" ToolTip="Close this window">
                    <StackPanel Orientation="Horizontal">
                        <controls:AutoGreyableImage Source="/CaptiveAire.VPL;component/Images/Close_16x.png" />
                        <TextBlock>Close</TextBlock>
                    </StackPanel>
                </Button>

            </StackPanel>
        </Grid>
    </Grid>
</Window>


    
