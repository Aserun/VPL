<ResourceDictionary x:Class="CaptiveAire.VPL.View.ElementResources"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CaptiveAire.VPL.View"
                    xmlns:viewModel="clr-namespace:CaptiveAire.VPL.ViewModel"
                    x:ClassModifier="internal"
                    xmlns:controls="clr-namespace:Cas.Common.WPF.Controls;assembly=Cas.Common.WPF"
                    xmlns:vpl="clr-namespace:CaptiveAire.VPL"
                    xmlns:converters="clr-namespace:CaptiveAire.VPL.Converters">

    <converters:CollapsedIfNotStatementConverter x:Key="CollapsedIfNotStatementConverter"/>
    
    <Style TargetType="Control" x:Key="ActionsVisiblityStyle">
        <Setter Property="Visibility" Value="Visible"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Actions.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Styles -->
    <Style TargetType="FrameworkElement" x:Key="ElementStyle">
        
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    
                    <!-- Show these for all elements -->
                    <MenuItem Header="Cut" Command="{Binding Path=CutCommand}">
                        <MenuItem.Icon>
                            <controls:AutoGreyableImage Source="/CaptiveAire.VPL;component/Images/Cut_16x.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Copy" Command="{Binding Path=CopyCommand}">
                        <MenuItem.Icon>
                            <controls:AutoGreyableImage Source="/CaptiveAire.VPL;component/Images/CopyToClipboard_16x.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Delete" Command="{Binding Path=DeleteCommand}">
                        <MenuItem.Icon>
                            <controls:AutoGreyableImage Source="/CaptiveAire.VPL;component/Images/Delete.gif"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <Separator/>                    
                    <MenuItem Header="Paste" Command="{Binding Path=PasteCommand}">
                        <MenuItem.Icon>
                            <controls:AutoGreyableImage Source="/CaptiveAire.VPL;component/Images/Paste_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <!-- Only show these if the data context implements IStatement -->
                    <Separator  Visibility="{Binding Converter={StaticResource CollapsedIfNotStatementConverter}}" />
                    <MenuItem Header="Is Enabled?" IsCheckable="True" IsChecked="{Binding Path=IsEnabled}" Visibility="{Binding Converter={StaticResource CollapsedIfNotStatementConverter}}" ToolTip="Disable a statement to prevent it from executing. Subsequent statements will still execute."/>

                    <!-- Only show these if we have actions -->
                    <Separator Style="{StaticResource ActionsVisiblityStyle}" />
                    <MenuItem Header="Actions" ItemsSource="{Binding Path=Actions}"  Style="{StaticResource ActionsVisiblityStyle}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Header" Value="{Binding Path=Name}"/>
                                <Setter Property="Command" Value="{Binding}"/>
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        
        <Setter Property="Effect" Value="{x:Null}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsDragging}" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" ShadowDepth="10" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsDragging}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="2" ShadowDepth="2" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>

            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- Elements -->
    <DataTemplate DataType="{x:Type vpl:Statement}">
        <local:StatementView Style="{StaticResource ElementStyle}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type vpl:CompoundStatement}">
        <local:CompoundStatementView  Style="{StaticResource ElementStyle}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vpl:OperatorBase}">
        <local:OperatorView  Style="{StaticResource ElementStyle}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vpl:Parameter}">
        <local:ParameterView Margin="2" />
    </DataTemplate>

</ResourceDictionary>